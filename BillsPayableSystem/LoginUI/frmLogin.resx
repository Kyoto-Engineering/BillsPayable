<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="loginButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QDORXhpZgAATU0AKgAAAAgABAESAAMAAAABAAEAAAE7AAIAAAAN
        AAAAPodpAAQAAAABAAAATJydAAEAAAAaAAAArAAAAABLb3dzYXIgQWhtZWQAAAAEkAMAAgAAABQAAACC
        kAQAAgAAABQAAACWkpEAAgAAAAMxNwAAkpIAAgAAAAMxNwAAAAAAADIwMTc6MDE6MjUgMTc6NDg6MTIA
        MjAxNzowMToyNSAxNzo0ODoxMgAAAEsAbwB3AHMAYQByACAAQQBoAG0AZQBkAAAA/9sAQwACAQECAQEC
        AgICAgICAgMFAwMDAwMGBAQDBQcGBwcHBgcHCAkLCQgICggHBwoNCgoLDAwMDAcJDg8NDA4LDAwM/9sA
        QwECAgIDAwMGAwMGDAgHCAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwM/8AAEQgAPgCEAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//E
        ALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYX
        GBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SV
        lpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5
        +v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMR
        BAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJ
        SlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5
        usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+GfjL+0/8Qv2
        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
</value>
  </data>
</root>