<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="txtpictureBox.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/7gAOQWRvYmUAZAAAAAAB/9sAQwAGBAQEBQQGBQUGCQYFBgkKCAYG
        CAoMCgoKCgoMDwwMDAwMDA8MDg4PDg4MEhIUFBISGhoaGhoeHh4eHh4eHh4e/9sAQwEHBwcMCwwXDw8X
        GhQRFBoeHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4e/8AAEQgB
        kgEsAwERAAIRAQMRAf/EABwAAQACAwEBAQAAAAAAAAAAAAAFBgEEBwMCCP/EAEgQAAIBAwEEBAgJCwME
        AwAAAAABAhEDBAUhMRIGQVGxE2FxgaEicnM1kcHRMpKyMxQWQlJigqLC0iNTVBWTJDZDgzQlY7NE/8QA
        FAEBAAAAAAAAAAAAAAAAAAAAAP/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/AP1SAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD4nfs
        QdJ3IxfVKSXaB8/e8T+tb+mvlA9IzhNVhJSXWnVAZAAAAAAAAAAAAAAAAAAGtqdydrTcu5bfDOFm5KEl
        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
        BMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAH/2Q==
</value>
  </data>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>60</value>
  </metadata>
</root>